DEBUG    celery.utils.functional:functional.py:335 
def ping():
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def words(self, text):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def words(self, text):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def sleep(seconds=0, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def noop(*args, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def fail(*args):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def xmap(task, it):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def ping():
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def create_test_task(total):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def xstarmap(task, it):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def add_replaced(self, x, y, z=0, *, queue="0"):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def xsum(nums):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def chunks(task, it, n):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def dummy_task():
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def ping():
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def identity(x):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def accumulate(self, *args, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def backend_cleanup():
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def chain(*args, **kwargs):
    return 1

DEBUG    celery.utils.functional:functional.py:335 
def add(x, y, z=0):
    return 1

WARNING  py.warnings:warnings.py:110 /home/runner/work/fastapi-celery/fastapi-celery/.venv/lib/python3.12/site-packages/celery/worker/consumer/consumer.py:508: CPendingDeprecationWarning: The broker_connection_retry configuration setting will no longer determine
whether broker connection retries are made during startup in Celery 6.0 and above.
If you wish to retain the existing behavior for retrying connections on startup,
you should set broker_connection_retry_on_startup to True.
  warnings.warn(

WARNING  kombu.connection:connection.py:669 No hostname was supplied. Reverting to default 'localhost'
INFO     celery.worker.consumer.connection:connection.py:22 Connected to memory://localhost//
WARNING  kombu.connection:connection.py:669 No hostname was supplied. Reverting to default 'localhost'
INFO     celery.worker.strategy:strategy.py:161 Task celery.ping[118de2b8-ecc2-4c88-8164-9b12517a8d2c] received
INFO     celery.app.trace:trace.py:128 Task celery.ping[118de2b8-ecc2-4c88-8164-9b12517a8d2c] succeeded in 0.012022539000014376s: 'pong'
INFO     celery.worker.strategy:strategy.py:161 Task tasks.dummy[5c369046-52b4-463e-991a-679c1e35d972] received
DEBUG    celery.worker.request:request.py:517 Task accepted: tasks.dummy[5c369046-52b4-463e-991a-679c1e35d972] pid:2270
INFO     celery.app.trace:trace.py:128 Task tasks.dummy[5c369046-52b4-463e-991a-679c1e35d972] succeeded in 0.0007860839999977998s: 44