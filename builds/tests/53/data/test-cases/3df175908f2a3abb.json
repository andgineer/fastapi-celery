{"uid":"3df175908f2a3abb","name":"test_celery_boilerplate_task_direct","fullName":"backend.tests.test_celery_boilerplate#test_celery_boilerplate_task_direct","historyId":"9b8dc4f07f3c3618cd3c11994b415b6c","time":{"start":1717130519558,"stop":1717130520605,"duration":1047},"description":"\n    Shows how to test celery tasks with test worker\n    ","descriptionHtml":"<pre><code>Shows how to test celery tasks with test worker\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert == failed. [pytest-clarity diff shown]\n  \u001B[0m\n  \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\n  \u001B[0m\n  \u001B[0m\u001B[32m33\u001B[0m\n  \u001B[0m\u001B[31m44\u001B[0m\n  \u001B[0m","statusTrace":"celery_worker = <Worker: gen2234@fv-az568-893 (running)>\ncelery_app = <Celery celery.tests at 0x7f155e0ba0c0>\n\n    def test_celery_boilerplate_task_direct(celery_worker, celery_app):\n        \"\"\"\n        Shows how to test celery tasks with test worker\n        \"\"\"\n        with patch(\"app.tasks.debug.dummy_function\", return_value=44):\n            celery_worker.reload()\n>           assert app.tasks.debug.dummy_task.delay().get(timeout=10) == 44\nE           assert == failed. [pytest-clarity diff shown]\nE             \u001B[0m\nE             \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\nE             \u001B[0m\nE             \u001B[0m\u001B[32m33\u001B[0m\nE             \u001B[0m\u001B[31m44\u001B[0m\nE             \u001B[0m\n\nbackend/tests/test_celery_boilerplate.py:34: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"celery_enable_logging","time":{"start":1717130518238,"stop":1717130518239,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_worker_pool","time":{"start":1717130519249,"stop":1717130519250,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_includes","time":{"start":1717130519249,"stop":1717130519249,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_worker_parameters","time":{"start":1717130519250,"stop":1717130519250,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_config","time":{"start":1717130519250,"stop":1717130519250,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_parameters","time":{"start":1717130519251,"stop":1717130519251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_app","time":{"start":1717130519251,"stop":1717130519262,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"use_celery_app_trap","time":{"start":1717130519251,"stop":1717130519251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_worker","time":{"start":1717130519263,"stop":1717130519556,"duration":293},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db","time":{"start":1717130519556,"stop":1717130519556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1717130519556,"stop":1717130519556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Shows how to test celery tasks with test worker\n    ","status":"failed","statusMessage":"AssertionError: assert == failed. [pytest-clarity diff shown]\n  \u001B[0m\n  \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\n  \u001B[0m\n  \u001B[0m\u001B[32m33\u001B[0m\n  \u001B[0m\u001B[31m44\u001B[0m\n  \u001B[0m","statusTrace":"celery_worker = <Worker: gen2234@fv-az568-893 (running)>\ncelery_app = <Celery celery.tests at 0x7f155e0ba0c0>\n\n    def test_celery_boilerplate_task_direct(celery_worker, celery_app):\n        \"\"\"\n        Shows how to test celery tasks with test worker\n        \"\"\"\n        with patch(\"app.tasks.debug.dummy_function\", return_value=44):\n            celery_worker.reload()\n>           assert app.tasks.debug.dummy_task.delay().get(timeout=10) == 44\nE           assert == failed. [pytest-clarity diff shown]\nE             \u001B[0m\nE             \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\nE             \u001B[0m\nE             \u001B[0m\u001B[32m33\u001B[0m\nE             \u001B[0m\u001B[31m44\u001B[0m\nE             \u001B[0m\n\nbackend/tests/test_celery_boilerplate.py:34: AssertionError","steps":[],"attachments":[{"uid":"327af21697cc5aea","name":"log","source":"327af21697cc5aea.txt","type":"text/plain","size":474}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"db::0","time":{"start":1717130520632,"stop":1717130520632,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_worker::0","time":{"start":1717130520633,"stop":1717130523526,"duration":2893},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"celery_app::0","time":{"start":1717130523527,"stop":1717130523527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"backend.tests"},{"name":"suite","value":"test_celery_boilerplate"},{"name":"host","value":"fv-az568-893"},{"name":"thread","value":"2234-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"backend.tests.test_celery_boilerplate"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":5},"items":[{"uid":"25ff254eaf3960e","reportUrl":"https://andgineer.github.io/fastapi-celery/builds/tests/52//#testresult/25ff254eaf3960e","status":"passed","time":{"start":1717129484161,"stop":1717129485178,"duration":1017}},{"uid":"7c0f1b8b73ce197","reportUrl":"https://andgineer.github.io/fastapi-celery/builds/tests/50//#testresult/7c0f1b8b73ce197","status":"failed","statusDetails":"AssertionError: assert == failed. [pytest-clarity diff shown]\n  \u001B[0m\n  \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\n  \u001B[0m\n  \u001B[0m\u001B[32m33\u001B[0m\n  \u001B[0m\u001B[31m44\u001B[0m\n  \u001B[0m","time":{"start":1716898270711,"stop":1716898271727,"duration":1016}},{"uid":"2dcb6e3a4e943f40","reportUrl":"https://andgineer.github.io/fastapi-celery/builds/tests/47//#testresult/2dcb6e3a4e943f40","status":"failed","statusDetails":"AssertionError: assert == failed. [pytest-clarity diff shown]\n  \u001B[0m\n  \u001B[0m\u001B[32mLHS\u001B[0m vs \u001B[31mRHS\u001B[0m shown below\n  \u001B[0m\n  \u001B[0m\u001B[32m33\u001B[0m\n  \u001B[0m\u001B[31m44\u001B[0m\n  \u001B[0m","time":{"start":1716820000801,"stop":1716820001657,"duration":856}},{"uid":"5141b0e9fd5317bc","reportUrl":"https://andgineer.github.io/fastapi-celery/builds/tests/46//#testresult/5141b0e9fd5317bc","status":"passed","time":{"start":1716819840675,"stop":1716819841809,"duration":1134}}]},"tags":[]},"source":"3df175908f2a3abb.json","parameterValues":[]}